#!/bin/bash
#*******************************************************************************
# Functions
#*******************************************************************************
#===============================================================================
function show_active_branches {
#===============================================================================
    echo "Active branches:"
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    printf '   %-15s %-20s\n' "ROOT" "$BRANCH"
    for smod in $SUBMODS; do
        pushd $smod > /dev/null
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        printf '   %-15s %-20s\n' "${smod^^}" "$BRANCH"
        popd > /dev/null
    done
}

#===============================================================================
function exec_gitgroup_command {
#===============================================================================
    echo "-------------------------------------------------------------------------------"
    echo -e "\tROOT"
    echo "-------------------------------------------------------------------------------"
    case $PREACT in
    show-branch)
        CBRANCH=$(git symbolic-ref -q --short HEAD)
        echo "Branch = $CBRANCH"
        ;;
    *) ;;
    esac
    git "$@"
    for smod in $SUBMODS; do
        pushd $smod > /dev/null
        MODTYPE=$(if test -f .git; then echo "submodule"; fi)
        echo "-------------------------------------------------------------------------------"
        echo -e "\t${smod^^} ($MODTYPE)"
        echo "-------------------------------------------------------------------------------"
        case $PREACT in
        show-branch)
            CBRANCH=$(git symbolic-ref -q --short HEAD)
            echo "Branch = $CBRANCH"
            ;;
        *) ;;
        esac
        git "$@"
        popd > /dev/null
    done
}

#*******************************************************************************
# Program
#*******************************************************************************
CMD=$1

ROOTD=$(pwd)
if test -d ../.git; then
    echo "ERROR: Command should be executed from the root of Git repository"
    exit 1
fi
SUBMODS=$(find . -maxdepth 2 -name .git | sed -e 's/\.git//g' | awk -F/ '{print $2}' | sort)

PREACT=none
POSTACT=none

case $CMD in
#===============================================================================
    status)
#===============================================================================
if test -f .gitmodules; then
    echo "Submodules:"
    git submodule
fi
PREACT=none
;;
#===============================================================================
    fetch)
#===============================================================================
PREACT=show-branch
POSTACT=none
;;
#===============================================================================
    pull)
#===============================================================================
PREACT=show-branch
POSTACT=none
;;
#===============================================================================
    push)
#===============================================================================
PREACT=show-branch
POSTACT=none
;;
#===============================================================================
    branch)
#===============================================================================
PREACT=none
POSTACT=none
;;
#===============================================================================
    tag)
#===============================================================================
PREACT=none
POSTACT=none
;;
#===============================================================================
    checkout)
#===============================================================================
PREACT=none
POSTACT=none
# show_active_branches
;;
#===============================================================================
   help | *)
#===============================================================================
echo "Group commands and parameters (applied to all submodules):"
echo "   status"
echo "   fetch"
echo "   pull"
echo "   push"
echo "   branch"
echo "   tag"
echo "   checkout"
exit 0
;;
esac
#--------------------------------------------------------------------------------
# Git command
#--------------------------------------------------------------------------------
exec_gitgroup_command "$@"

